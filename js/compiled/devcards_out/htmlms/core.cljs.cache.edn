;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, defcard devcards.core}, :excludes #{}, :name htmlms.core, :imports {XhrIo goog.net.XhrIo, Interval goog.date.Interval}, :requires {t cognitect.transit, devcards.core devcards.core, reagent.core reagent.core, r reagent.core, dc devcards.core, cljs.core.async cljs.core.async, cognitect.transit cognitect.transit, cu cemerick.url, sablono.core sablono.core, cs clojure.string, cemerick.url cemerick.url, sab sablono.core, XhrIo goog.net.XhrIo, Interval goog.date.Interval, clojure.string clojure.string, cljs.reader cljs.reader, reader cljs.reader}, :uses {close! cljs.core.async, chan cljs.core.async}, :defs {get-data {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 150, :column 7, :end-line 150, :end-column 15, :arglists (quote ([bmi-data param value min max]))}, :name htmlms.core/get-data, :variadic false, :file "src/htmlms/core.cljs", :end-column 15, :method-params ([bmi-data param value min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 5, :fn-var true, :arglists (quote ([bmi-data param value min max]))}, timeout {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 49, :column 7, :end-line 49, :end-column 14, :arglists (quote ([ms]))}, :name htmlms.core/timeout, :variadic false, :file "src/htmlms/core.cljs", :end-column 14, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, gcd {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 60, :column 6, :end-line 60, :end-column 9}, :name htmlms.core/gcd, :variadic false, :file "src/htmlms/core.cljs", :end-column 9, :method-params ([a b]), :protocol-impl nil, :arglists-meta (), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists nil}, initial-length {:name htmlms.core/initial-length, :file "src/htmlms/core.cljs", :line 30, :column 1, :end-line 30, :end-column 24, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 30, :column 10, :end-line 30, :end-column 24}}, main {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 296, :column 7, :end-line 296, :end-column 11, :arglists (quote ([]))}, :name htmlms.core/main, :variadic false, :file "src/htmlms/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, bmi-component {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 219, :column 7, :end-line 219, :end-column 20, :arglists (quote ([bmi-data]))}, :name htmlms.core/bmi-component, :variadic false, :file "src/htmlms/core.cljs", :end-column 20, :method-params ([bmi-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bmi-data]))}, slider {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 86, :column 7, :end-line 86, :end-column 13, :arglists (quote ([bmi-data param value min max]))}, :name htmlms.core/slider, :variadic false, :file "src/htmlms/core.cljs", :end-column 13, :method-params ([bmi-data param value min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 5, :fn-var true, :arglists (quote ([bmi-data param value min max]))}, width-ratio {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 215, :column 7, :end-line 215, :end-column 18, :arglists (quote ([w h]))}, :name htmlms.core/width-ratio, :variadic false, :file "src/htmlms/core.cljs", :end-column 18, :method-params ([w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([w h]))}, r {:name htmlms.core/r, :file "src/htmlms/core.cljs", :line 46, :column 1, :end-line 46, :end-column 7, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 46, :column 6, :end-line 46, :end-column 7}}, calc-bmi {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 75, :column 7, :end-line 75, :end-column 15, :arglists (quote ([bmi-data]))}, :name htmlms.core/calc-bmi, :variadic false, :file "src/htmlms/core.cljs", :end-column 15, :method-params ([bmi-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bmi-data]))}, height-ratio {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 211, :column 7, :end-line 211, :end-column 19, :arglists (quote ([w h]))}, :name htmlms.core/height-ratio, :variadic false, :file "src/htmlms/core.cljs", :end-column 19, :method-params ([w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([w h]))}, initial-title {:name htmlms.core/initial-title, :file "src/htmlms/core.cljs", :line 29, :column 1, :end-line 29, :end-column 23, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 29, :column 10, :end-line 29, :end-column 23}}, get-id-from-url {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 38, :column 7, :end-line 38, :end-column 22, :arglists (quote ([u]))}, :name htmlms.core/get-id-from-url, :variadic false, :file "src/htmlms/core.cljs", :end-column 22, :method-params ([u]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([u]))}, fluff {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 138, :column 7, :end-line 138, :end-column 12, :arglists (quote ([skinny width height length title]))}, :name htmlms.core/fluff, :variadic false, :file "src/htmlms/core.cljs", :end-column 12, :method-params ([skinny width height length title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 5, :fn-var true, :arglists (quote ([skinny width height length title]))}, htmlout {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 170, :column 7, :end-line 170, :end-column 14, :arglists (quote ([bmi-data param value width height min max length title]))}, :name htmlms.core/htmlout, :variadic false, :file "src/htmlms/core.cljs", :end-column 14, :method-params ([bmi-data param value width height min max length title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 9, :fn-var true, :arglists (quote ([bmi-data param value width height min max length title]))}, intervalobj {:name htmlms.core/intervalobj, :file "src/htmlms/core.cljs", :line 31, :column 1, :end-line 31, :end-column 17, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 31, :column 6, :end-line 31, :end-column 17}}, ifriendly {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 133, :column 7, :end-line 133, :end-column 16, :arglists (quote ([url]))}, :name htmlms.core/ifriendly, :variadic false, :file "src/htmlms/core.cljs", :end-column 16, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, htmloutvisual {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 185, :column 7, :end-line 185, :end-column 20, :arglists (quote ([bmi-data param value width height min max length title]))}, :name htmlms.core/htmloutvisual, :variadic false, :file "src/htmlms/core.cljs", :end-column 20, :method-params ([bmi-data param value width height min max length title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 9, :fn-var true, :arglists (quote ([bmi-data param value width height min max length title]))}, xhr-data {:protocol-inline nil, :meta {:file "/Volumes/SamsungSSD/Users/michaellopez/src/htmlms/src/htmlms/core.cljs", :line 68, :column 7, :end-line 68, :end-column 15, :arglists (quote ([url cb]))}, :name htmlms.core/xhr-data, :variadic false, :file "src/htmlms/core.cljs", :end-column 15, :method-params ([url cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url cb]))}}, :require-macros {m cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:path :htmlms.core :frame :inspect-data :else :func :name :width :inittitle :history :yurl :title :documentation :card :main-obj :initial-data :YouTube :bmi :length :options :initlength :json :query :height :heading}, :order [:inittitle :initlength :query :json :path :func :htmlms.core :card :name :documentation :main-obj :initial-data :options :heading :height :width :bmi :yurl :length :title :else :YouTube :inspect-data :frame :history]}, :doc nil}